local protected = {}

function restore(se_obj)
	local se_box = server_object(se_obj.parent_id) -- получаем серверный объект хоз€ина
	if se_box then
		if se_box:clsid() == clsid.inventory_box then
			if protected[se_box.id] == nil then
				--log("restore protect box ID: "..se_box.id.." story ID: "..se_box.m_story_id.." name: "..se_box:name())
				table.insert(amk_offline_alife.protected.ids, se_box.id)
			end
			table.add(protected, se_box.id)
		end
	else
		log("FAILED restore protect box id: "..i.." name: "..protected_items.get_obj_name(se_obj))
	end
end

function sortItems(t1, t2)
	return t1[2] > t2[2]
end

function sortParents(t1, t2)
	return t1[2]["count"] > t2[2]["count"]
end

function remove(box, item)
	if item and item.section and item:section() == "zamok" and box then
		--log("remove protect from box ID: "..box:id().." story ID: "..box:story_id().." name: "..box:name())
		local box_id = box:id()
		if protected[box_id] == 1 then
			for i, v in pairs(amk_offline_alife.protected.ids) do
				if v == box_id then
					table.remove(amk_offline_alife.protected.ids, i)
					amk_offline_alife.update_tables(level.name())
					amk.send_tip("treasure_stolen", nil, nil, 5)
					break
				end
			end
		end
		table.sub(protected, box_id)
	end
end

function add(item)
	if item:section() == "zamok" and not has_info("biznes_remove_special_item") then
		local sitem = server_object(item:id())
		if sitem == nil then return end
		local se_box = server_object(sitem.parent_id)
		if se_box ~= nil and se_box:clsid() == clsid.inventory_box then
			local i = se_box.id
			if protected[i] == nil then
				--log("protect box ID: "..se_box.id.." story ID: "..se_box.m_story_id.." name: "..se_box:name())
				table.insert(amk_offline_alife.protected.ids, i)
				amk_offline_alife.update_tables(level.name())
				amk.send_tip("treasure_locked", nil, nil, 5)
			end
			table.add(protected, i)
		end
	end
end
