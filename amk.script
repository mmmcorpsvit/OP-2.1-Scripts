-- Основной скрипт амк
convert_npc = {}
oau_watchdog = 0
oau_reason = ""

-- переменные для звуков сообщений
local pda_news = voice([[device\pda\pda_news]])
local pda_tips = voice([[device\pda\pda_tip]])
local pda_task = voice([[device\pda\pda_objective]])
local pda_sos = voice([[device\pda\pda_sos]])

--показываем типс
function send_tip(news_text, header, timeout, showtime, sender, sound)
	if news_text==nil then return end
	if header==nil then header = translate("st_tip") end
	if timeout == nil then timeout = 0 end
	if showtime == nil then showtime = 5 end

	local player
	if sound=="news" then
		player = pda_news
	elseif sound=="task" then
		player = pda_task
	elseif sound=="questman_death" then
		player = pda_sos
	else
		player = pda_tips
	end

	--' Играем дефолтный звук
	player:play_no_feedback(db.actor, sound_object.s2d, timeout, vector(), 1.0)

	local news_text = "%c[sender]"..header.."\\n".."%c[default]"..news_text
	local x,y = news_manager.get_sender_icon(news_text, sender)
	db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(x,y,83,47), timeout*1000, showtime*1000)
	return true
end

--спавним объекты на карту
function spawn_item(spawn_item, pos, gv,lv)
  if gv==nil then gv=db.actor:game_vertex_id() end
  if lv==nil then lv=db.actor:level_vertex_id() end
  return create(spawn_item, pos, lv, gv)
end

--для спавна патронов используем spawn_ammo_in_inv
function spawn_item_in_inv(spawn_item,npc)
	if not npc then
		npc = db.actor
	end
	local item = create(spawn_item,
		npc:position(),
		npc:level_vertex_id(),
		npc:game_vertex_id(),
		npc:id())

	if npc:id() ~= db.actor:id() then
		-- Фикс пропадания доспавненного предмета при сейв/лоаде
		level.client_spawn_manager():add(item.id, -1, fix_spawn_item_in_inv, npc)  -- Калбек на выход item в онлайн
	end

	return item
end

function fix_spawn_item_in_inv(npc, id, item)
    npc:transfer_item(item, npc)
end

--используем для спавна патронов
function spawn_ammo_in_inv(spawn_item,number,npc)
  if npc==nil then
    npc=db.actor
  end
  if number > 0 then
    return se_respawn.create_ammo(spawn_item,
        npc:position(),
        npc:level_vertex_id(),
        npc:game_vertex_id(),
        npc:id(),
        number)
  end
end

-- удаляем объект из игры
function remove_item(remove_item)
  if remove_item~=nil then
    release(server_object(remove_item:id()), true)
    return true
  end
  return false
end

-- выбрасываем объект из инвентаря, применимо к ГГ
function drop_item(npc,item)
  if item~=nil then
--      npc:mark_item_dropped(item)
    npc:drop_item(item)
  end
end

--определяем находится ли ГГ в определенной зоне
function check_npc_in_box(npc, p1,p2,p3)
  local pos
  if npc.name then pos=npc:position() else pos=npc end
  if p3==nil then
    if is_point_inside_interval(pos.x,p1.x,p2.x) and
      is_point_inside_interval(pos.y,p1.y,p2.y) and
      is_point_inside_interval(pos.z,p1.z,p2.z) then
      return true
    else
      return false
    end
  else
    local v1,v2,r,proj1,proj2,dv1,dv2
    v1=sub(p2,p1)
    v2=sub(p3,p2)
    v1.y=0
    v2.y=0
    dv1=v1:magnitude()
    dv2=v2:magnitude()
    v1:normalize()
    v2:normalize()
    r=sub(pos,p1)
    local v1p=vector():set(v1.z,0,-v1.x)
    proj2=v1p:dotproduct(r)/v1p:dotproduct(v2)
    proj1=v1:dotproduct(r)-v1:dotproduct(v2)*proj2
    if proj1>0 and proj1<dv1 and proj2>0 and proj2<dv2 and pos.y>p1.y and pos.y<p3.y then
      return true
    else
      return false
    end
  end
end

function is_point_inside_interval(x,p1,p2)
  if p1>p2 then
    p1,p2 = p2,p1
  end

  if x>p1 and x<p2 then
    return true
  else
    return false
  end
end

function sub(v1,v2)
  local newvec = vector()
  newvec.x = v1.x-v2.x
  newvec.y = v1.y-v2.y
  newvec.z = v1.z-v2.z
  return newvec
end

--колбэк на взятие предмета в инвентарь ГГ
function on_item_take(obj)
	gps_habar.on_item_take(obj)
	escape_dialog.have_a_art()
	del_map_spot(obj:id(),"red_location")
	amk_mod.check_usable_item(obj)
end

--колбэк на взятие предмета в инвентарь ГГ из ящика
function on_item_take_from_box(obj, item)
	del_map_spot(obj:id(),"crlc_big")
	gps_habar.on_item_take_from_box(obj, item)
end

--колбэк на потерю предмета из инвентаря ГГ
function on_item_drop(obj)
	gps_habar.on_item_drop(obj)
	amk_mod.check_for_af_drop(obj)
	amk_mod.check_for_item_drop(obj)
	amk_mod.check_beacon_drop(obj)
end

local prev_health = 0

-- offline - online для применения различных изменений, серверный объект на входе
function convert(sobj)
	local obj = level_object(sobj.id)
	if obj then
		if IAmAStalker[sobj:clsid()] then
			obj:stop_talk()
		end
		amk.convert_npc[sobj.id] = true
		switch_offline(obj)
	end
end

function on_actor_update(delta)
	amk_mod.blowout_phantoms()
	amk_mod.interactive_music()
	amk_offline_alife.update()

	-- Динамический худ
	ui_hud_mask.update()

	-- Онлайн-Оффлайн-Онлайн
	for k,v in pairs(convert_npc) do
		local obj = level_object(k)
		local sobj = server_object(k)
		if sobj then
			if obj == nil and v == true then
				convert_npc[k]=false
				switch_online(k)
			elseif obj and v == false then
				convert_npc[k] = nil
			elseif v == 1 and obj then -- тайник не перешёл в оффлайн попытаемся его туда запихнуть.
				ai:set_switch_online(k, false)
				ai:set_switch_offline(k, true)
			elseif v == 1 then -- тайник в оффлайне. выталкиваем.
				convert_npc[k] = nil
				switch_online(k)
			end
		else
			convert_npc[k]=nil
		end
	end

	-- Эффекты при падении здоровья
	if db.actor:alive() then
		if prev_health > db.actor.health+0.05 then
			level.add_pp_effector("amk_shoot.ppe", 2011, false)
			level.set_pp_effector_factor(2011, (prev_health-db.actor.health)*100)
			if prev_health > db.actor.health+0.2 then
				local cameffs, sounds
				if prev_health > db.actor.health+0.5 then
					cameffs = {"head_shot","fusker"}
					sounds = {"pain_4","pain_1","hit_5","hit_6"}
				else
					cameffs ={"shell_shock","hit_front","hit_right","hit_back","hit_left","hit_front_left","hit_back_left","hit_front_right","hit_back_right"}
					sounds = {"pain_2","pain_3","pain_5","pain_6","pain_7","pain_8"}
				end
				level.add_cam_effector("camera_effects\\"..cameffs[math.random(#cameffs)]..".anm", 999, false, "")
				say("actor\\"..sounds[math.random(#sounds)])
				if math.random() < (prev_health-db.actor.health)/2.5 then
					local active_item = db.actor:active_item()
					if active_item and active_item:section() ~= "bolt" and active_item:section() ~= "wpn_knife" then
						db.actor:drop_item(active_item)
					end
				end
			end
		end
		prev_health = db.actor.health
	end
end

--колбэк на создание непися (точнее на его переход в онлайн)
function on_npc_spawn(npc)
	news_main.on_spawn(npc)
end

function on_net_spawn(obj)
	amk_mod.build_btrs_table(obj)
end

--колбэк на удаление непися (точнее на его переход в оффлайн)
function on_npc_go_offline(npc)
	amk_anoms.unreg_in_anom_manager(npc)

	if game_is_running() then
		local sobj = server_object(npc:id())
		if sobj then
			--amk_offline_alife.process_trade(sobj) -- Пока отключено, смысл крутить торговлю на net_destroy? В основном это вызывается при сбросе игры перед лоадом для всех онлайновых неписей, а не при уходе непися в оффлайн.
		end
	end
end

--колбэк на юзание объекта
function on_use(victim, who)
  if db.actor and who and who:id()==db.actor:id() then
    amk_mod.check_usable_item(victim)
  end
end

--колбэк на смерть непися
function on_npc_death(victim, who)
	news_main.on_death(victim, who)
	amk_anoms.unreg_in_anom_manager(victim)
	amk_mod.generate_recipe(victim,who)
	kostya_dialog.stealth_fail_task(victim, who) 	-- stealth
end

--колбэк на смерть монстра
function on_monster_death(victim, who)
	amk_anoms.unreg_in_anom_manager(victim)
	amk_mod.zomby_blow(victim)

    if string.find(victim:name(),"marsh_controller") then
       give_info("marsh_controller_dead")
    end
end

function on_npc_hit(obj, amount, local_direction, who, bone_index)
	if db.actor and who and who:id()==db.actor:id() and amount>0 then
		amk_mod.calc_adrenaline("actor_hit_enemy",obj,"npc")
	end
end

function on_monster_hit(obj, amount, local_direction, who, bone_index)
	if who and who:id() == db.actor:id() and amount > 0 then
		amk_mod.calc_adrenaline("actor_hit_enemy",obj,"monster")
	end
end

-- проверка на видимость производится раз в секунду
function enemy_see_actor(obj,typ)
	if protected_items.is_monster_friend(obj:section()) then return end

	danger.enemy_see_actor()
	db.vbr = drrr.next_vbr()

	if string.find(obj:name(),"^ferma_band") and not has_info("sveeblov_ferma_have") then
       give_info("sveeblov_ferma_fail")
    end
	if string.find(obj:name(),"^xalyava_naem") and not has_info("xalyava_nebo_next") then
       give_info("xalyava_naemnik_see")
    end

	amk_mod.calc_adrenaline("enemy_see_actor",obj,typ)
end
function actor_see_enemy(obj,typ)
	if protected_items.is_monster_friend(obj:section()) then return end

	amk_mod.calc_adrenaline("actor_see_enemy",obj,typ)
end

-- непись стрелял в гг
function npc_shot_actor(obj)
	amk_mod.calc_adrenaline("enemy_hit_actor",obj,"npc")
end

--загружаем все переменные, которые нужно, вызывается загрузке игры, автоматически; вручную не вызывать
function on_game_load()
	amk_mod.first_run()
	amk_mod.check_spawn()
	gps_habar.init()
    sak.out_teleport()
	difficulty_manager.deathStatChangeDifficulty()
	meceniy_work.prepare_for_work()

  if has_info("val_actor_has_borov_key") and not has_info("val_borov_dead") then
    give_info("val_borov_dead")
  end
end

-- Эта функция вызывается самой первой. Онлайновые объекты недоступны! db.actor недоступен!
function on_game_start()
	amk_mod.on_game_start()
    IAmAStalkerInit()
    IAmAMonsterInit()
	IAmAWeaponInit()
end

function on_REspawn(obj,respawner)
	if obj and respawner then
		amk_mod.respawned(obj,respawner)
		if IAmAMonster[obj:clsid()] then
			if respawner.spawned_goes_online==true then
				amk_mod.switch_monster_online(obj)
			elseif respawner.spawned_goes_online==false then
				amk_mod.switch_monster_offline(obj)
			end
		end
	end
	if (obj) then
		news_main.on_spawn(obj)
	end
end
