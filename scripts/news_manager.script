local news = {
	tips_esc_trader_about_anomalies	= voice([[characters_voice\scenario\trader\trader_tutorial_anomalies_1]]),
	gar_dolg_warning				= voice([[characters_voice\scenario\duty\duty_warning1]]),
	esc_return_dv					= voice([[characters_voice\scenario\trader\return_from_dv]]),
	escape_fox_quest				= voice([[characters_voice\scenario\trader\trader_pda_fox]]),
	tip_petruha_report				= voice([[characters_voice\scenario\escape\petruha_raport_p]]),


	tips_agr_krot_sos				= voice([[characters_voice\scenario\agroprom\krot_help_pda_1]]),
	tips_agr_krot_sos1				= voice([[characters_voice\scenario\agroprom\krot_help_pda_2]]),
	tips_agr_krot_sos2				= voice([[characters_voice\scenario\agroprom\krot_help_pda_2]]),
    tips_agr_stalker_help_2			= voice([[characters_voice\scenario\agroprom\stalker_help_2]]),
    tips_agr_stalker_help_1			= voice([[characters_voice\scenario\agroprom\stalker_help_1]]),
	-- ghost_tips						= voice([[characters_voice\scenario\agroprom\strelok_pda]]),
	tips_agr_trader_documents		= voice([[characters_voice\scenario\agroprom\trader_pda_1]]),
    pass_to_1st_door                = voice([[characters_voice\scenario\val\door1_password]]),
    pass_to_2nd_door                = voice([[characters_voice\scenario\val\door2_password]]),


	bar_ecolog_crush_heli_down		= voice([[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_1]]),
	bar_freedom_attack_attract_actor= voice([[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_2]]),
	bar_freedom_spam_1				= voice([[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_6]]),
	bar_freedom_spam_2				= voice([[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_4]]),
	bar_freedom_spam_3				= voice([[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_3]]),
	bar_freedom_spam_4				= voice([[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_5]]),
	bar_freedom_attack				= voice([[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_7]]),
	bar_freedom_attack_spy			= voice([[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_8]]),
	bar_ecolog_crush_start_heli		= voice([[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_1]]),
	bar_ecolog_crush_attract_actor  = voice([[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_2]]),
	bar_ecolog_spam_1				= voice([[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_3]]),
	bar_ecolog_spam_2				= voice([[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_4]]),
	bar_ecolog_spam_3				= voice([[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_5]]),
	bar_ecolog_spam_4				= voice([[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_6]]),
	bar_ecolog_attack				= voice([[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_7]]),
    rostok_kruglov_spam_1			= voice([[characters_voice\scenario\Rostok\kruglov_pda_help_1]]),
    rostok_kruglov_spam_2			= voice([[characters_voice\scenario\Rostok\kruglov_pda_help_3]]),
	bar_ecolog_escape				= voice([[characters_voice\scenario\Rostok\volkodav_pda_kruglov_escape_1]]),
    storyline_vasilyev_tip			= voice([[characters_voice\scenario\yantar\vasiliev_pda]]),
    storyline_ghost_tip 			= voice([[characters_voice\scenario\yantar\ghost_pda]]),
    yan_saharov_message 			= voice([[characters_voice\scenario\yantar\professor_to_actor_pda_3]]),
	yan_saharov_message_2 			= voice([[characters_voice\scenario\yantar\professor_to_actor_pda_4]]),
    yan_saharov_message_3 			= voice([[characters_voice\scenario\yantar\professor_to_actor_pda_5]]),
	
	yan_scientist_probe				= voice([[characters_voice\scenario\yantar\kruglov_radiation_quest_13]]),
	yan_scientist_probe_1			= voice([[characters_voice\scenario\yantar\kruglov_radiation_quest_11]]),
	yan_scientist_probe_2			= voice([[characters_voice\scenario\yantar\kruglov_radiation_quest_12]]),
	yan_scientist_probe_3			= voice([[characters_voice\scenario\yantar\kruglov_radiation_quest_6]]),
	
	rostok_kruglov_follow			= voice([[characters_voice\scenario\Rostok\pda_kruglov_help_6]]),
	bar_freedom_chase			= voice([[characters_voice\scenario\Rostok\pda_kruglov_stop_enemy_1]]),
	rostok_kruglov_follow_2			= voice([[characters_voice\scenario\Rostok\pda_kruglov_stop_enemy_2]]),
	rostok_kruglov_follow_3			= voice([[characters_voice\scenario\Rostok\pda_kruglov_help_5]]),
		
	bar_territory_dolg_1_hit		= voice([[characters_voice\scenario\bar\pda\voronin_gunfire_pda_1]]),
	bar_territory_dolg_2_hit		= voice([[characters_voice\scenario\bar\pda\voronin_gunfire_pda_2]]),
	bar_territory_dolg_3_hit		= voice([[characters_voice\scenario\bar\pda\voronin_gunfire_pda_3]]),
	bar_territory_dolg_kill			= voice([[characters_voice\scenario\bar\pda\voronin_gunfire_pda_4]]),
	
	tips_bun_komand                 = voice([[characters_voice\scenario\bun\patrol_prikaz]]),

	general_ecolog_tip_1            = voice([[characters_voice\scenario\yantar\professor_to_actor_pda_1]]),
    general_ecolog_tip_2            = voice([[characters_voice\scenario\yantar\professor_to_actor_pda_2]]),


    tips_gar_hellcar_alarm			= voice([[characters_voice\scenario\garbage\neutrals_commander_pda_1]]),
	gar_dolg_blokpost_warning		= voice([[characters_voice\scenario\duty\duty_warning1]]),
	gar_dolg_monster_rush			= voice([[characters_voice\scenario\duty\duty_request1]]),
	gar_direction_fire				= voice([[characters_voice\scenario\garbage\junkyard_combat_ambush]]),
	gar_hellcar_victory				= voice([[characters_voice\scenario\garbage\junkyard_combat_end]]),
	gar_actor_looser				= voice([[characters_voice\scenario\garbage\duty_after_rush_bad]]),
	gar_actor_normal				= voice([[characters_voice\scenario\garbage\duty_after_rush_normal]]),
	gar_actor_winner				= voice([[characters_voice\scenario\garbage\duty_after_rush_good]]),


	esc_direction_fire				= voice([[characters_voice\scenario\escape\lager_fanat_attack]]),
	esc_fanat_victory				= voice([[characters_voice\scenario\escape\lager_fanat_victory]]),
	
	rad_barman_spam					= voice([[characters_voice\scenario\radar\rad_barman_message]]),


	val_monolith_trader_pda1		= voice([[characters_voice\scenario\val\trader_dialog1]]),
	o_soznanie_text					= voice([[characters_voice\scenario\sarcofag\o_soznanie_call]]),


-- dublicate pda sounds for remark scheme
    val_rob_leader_jeer_1           = voice([[characters_voice\scenario\val\rob_leader_jeer_1_p]]),
--    val_rob_leader_call             = voice([[characters_voice\scenario\val\rob_call_1_p]]),

    pri_followers_leader_phrase1_1  = voice([[characters_voice\scenario\pri\followers_leader_phrase1_1_p]]),
    pri_followers_leader_phrase1_2  = voice([[characters_voice\scenario\pri\followers_leader_phrase1_2_p]]),
    pri_followers_leader_phrase1_3  = voice([[characters_voice\scenario\pri\followers_leader_phrase1_3_p]]),
}

local pda_news = voice([[device\pda\pda_news]])
local pda_tips = voice([[device\pda\pda_tip]])
local pda_task = voice([[device\pda\pda_objective]])

-- При добавлении новых квестовиков добавлять для них иконки в ui_iconstotal и прописывать сюда полное имя, как оно идет в смс. Или прописывать sender в вызов send_tip. Сортировать по алфавиту.
local tips_icons = {
	aaz 		= {249,1128,"name_aaz","name_aaz_small"}, 
	adrenalin 	= {0,1880,"name_adrenalin","name_adrenalin_small"},
	akill		= {332,1128,"name_akill","name_akill_small"},
	akim 		= {166,1081,"name_akim","name_akim_small"},
	alexandrych = {166,1739,"name_aleksandrich","name_aleksandrich_small"},
	alp			= {332,1175,"name_alpinist","name_alpinist_small"},
	anna		= {0,1269,"name_anna","name_anna_small"},
	andersen	= {498,1363,"name_andersen","name_andersen_small"},
	ara 		= {415,423,"name_ara","name_ara_small"},
	arena    	= {332,141,"name_arni","name_arni_small"},
	arhara 		= {83,1081,"name_arhara","name_arhara_small"},
	ariadna 	= {166,1692,"name_ariadna","name_ariadna_small"},
	backpack	= {0,846},
	barmaley	= {498,1316,"name_ser_barmalei","name_ser_barmalei_small"},
	barman   	= {332,235,"name_barmen","name_barmen_small"},
	baty 		= {249,1316,"name_batya","name_batya_small"},
	bes 		= {332,1645,"name_bes","name_bes_small"},
	bibliofrend = {0,1175,"name_praim","name_praim_small"},
	bibliofrend_black = {0,1222},
	bland 		= {166,1598,"name_blend","name_blend_small"},
	blondy 		= {166,1833,"name_blondinka","name_blondinka_small"},
	bocman 		= {83,1598,"name_botsman","name_botsman_small"},
	borman 		= {498,1175,"name_borman","name_borman_small"},
	boroda 		= {0,1598,"name_boroda","name_boroda_small"},
	borov 		= {332,564,"name_borov","name_borov_small"},
	brodaga 	= {0,1504,"name_brodyaga","name_brodyaga_small"},
	bubulyka 	= {0,1316,"name_stalker_bubulyuka","name_stalker_bubulyuka_small"},
	buusty		= {83,1410,"name_basti","name_basti_small"},
	chernomor 	= {166,1316,"name_chernomor","name_chernomor_small"},
	coll	 	= {664,423,"name_kollektsioner","name_kollektsioner_small"},
	dan 		= {166,987,"name_den","name_den_small"},
	dasha 		= {166,1880,"name_dasha","name_dasha_small"},
	death    	= {0,752},
	default  	= {0,658}, -- по умолчанию
	dezertir	= {332,0,"name_dezertir","name_dezertir_small"},
	diak 		= {498,1457,"name_dyak","name_dyak_small"},
	dimak 		= {249,1081,"name_dimak","name_dimak_small"},
	dmitriev 	= {498,0,"name_professor_dmitriev","name_professor_dmitriev_small"},
	docent 		= {415,1739,"name_dotsent","name_dotsent_small"},
	doctor 		= {415,846,"name_doktor","name_doktor_small"},
	dolgovazyi	= {415,1786,"name_dolgovyazii","name_dolgovyazii_small"},
	doctor_black = {83,1551,"name_chyornii_doktor","name_chyornii_doktor_small"},
	dolg     	= {498,141,"name_dolg","name_dolg_small"},
	dragunof	= {249,1833,"name_dragunov","name_dragunov_small"},
	duda 		= {166,1551,"name_duda","name_duda_small"},
	ecolog   	= {498,0},
	elsa 		= {0,1739,"name_elza","name_elza_small"},
	err 		= {913,799}, -- error
	fanat		= {332,1551,"name_fanat","name_fanat_small"},
	father_pantera = {83,1833,"name_otets_panteri","name_otets_panteri_small"},
	fenix 		= {498,1645,"name_feniks","name_feniks_small"},
	fenrir 		= {0,1034,"name_fenrir","name_fenrir_small"},
	filatov		= {498,1692,"name_kapitan_filatov","name_kapitan_filatov_small"},
	filin	  	= {498,1739,"name_filin","name_filin_small"},
	freedom  	= {498,94,"name_svoboda","name_svoboda_small"},
	freeman  	= {498,1034,"name_frimen","name_frimen_small"},
	fric 		= {83,1504,"name_frits","name_frits_small"},
	gavr		= {332,1739,"name_gavr","name_gavr_small"},
	gen_info 	= {0,658}, -- общая инфа
	gila		= {332,1786,"name_zhila","name_zhila_small"},
	ginekolog 	= {0,1927,"name_shura_ginekolog","name_shura_ginekolog_small"},
	gologramma 	= {498,1269,"name_gologramma","name_gologramma_small"},
	grach		= {332,1081,"name_grach","name_grach_small"},
	haliava		= {332,1269,"name_halyava","name_halyava_small"},
	hiko 		= {498,1833,"name_hiko","name_hiko_small"},
	himera 		= {83,1927,"name_himera","name_himera_small"},
	himik 		= {249,1222,"name_himik","name_himik_small"},
	holod 		= {83,1974,"name_holodov","name_holodov_small"},
	iskra 		= {166,1128,"name_iskra","name_iskra_small"},
	ivancov		= {332,329,"name_ivantsov","name_ivantsov_small"},
	kalinin		= {498,1410,"name_kalinin","name_kalinin_small"},
	kalmyk		= {249,1927,"name_kalmik","name_kalmik_small"},
	kanal	 	= {747,94,"name_obschii_kanal","name_obschii_kanal_small"},
	kartograf  	= {913,235,"name_kartograf","name_kartograf_small"},
	kep		  	= {415,1974,"name_kep","name_kep_small"},
	kidalo		= {249,1833,"name_sanyok_razboinik","name_sanyok_razboinik_small"},
	killer   	= {913,940,"name_nayomniki","name_nayomniki_small"},
	klenov 		= {83,1316,"name_klyonov","name_klyonov_small"},
	klyk 		= {83,1034,"name_klik","name_klik_small"},
	kolmogor 	= {83,1269,"name_kolmogor","name_kolmogor_small"},
	korsar		= {332,1081,"name_korsar","name_korsar_small"},
	korshun		= {498,1739,"name_korshun","name_korshun_small"},
	kostya		= {332,1598,"name_kostya","name_kostya_small"},
	kostylnuga 	= {83,1175,"name_kostilnoga","name_kostilnoga_small"},
	kotobegemot = {0,987,"name_kotobegemot","name_kotobegemot_small"},
	kot			= {498,1081,"name_kot","name_kot_small"},
	krest		= {498,1504,"name_krest","name_krest_small"},
	krisyk		= {332,1692,"name_krisyuk","name_krisyuk_small"},
	kruglov		= {332,1363,"name_kruglov","name_kruglov_small"},
	kruger		= {249,1692,"name_kryuger","name_kryuger_small"},
	kulinar		= {332,1645,"name_kulinar","name_kulinar_small"},
	krot     	= {332,47,"name_krot","name_krot_small"},
	kuzmat 		= {166,1927,"name_kuzkina_mat","name_kuzkina_mat_small"},
	kuznecov 	= {332,752,"name_kuznetsov","name_kuznetsov_small"},
	lesnik 		= {166,1269,"name_lesnik","name_lesnik_small"},
	lis 		= {498,1222,"name_lis","name_lis_small"},
	lisiy 		= {415,141,"name_lisii","name_lisii_small"},
	lentay		= {249,1645,"name_lentyai","name_lentyai_small"},
	lobsang 	= {0,1410,"name_lobsang","name_lobsang_small"},
	loh 		= {332,611,"name_sergei_lohmatii","name_sergei_lohmatii_small"},
	lovkach 	= {664,517,"name_lovkach","name_lovkach_small"},
	luber		= {332,1316,"name_maks_lyuber","name_maks_lyuber_small"},
	lucash 		= {415,235,"name_lukash","name_lukash_small"},
	ludmila		= {0,1692,"name_lyudmila","name_lyudmila_small"},
	maks		= {332,1410,"name_maks","name_maks_small"},
	maksimilian = {166,1175,"name_maksimilian","name_maksimilian_small"},
	maria 		= {0,1551,"name_mariya","name_mariya_small"},
	masha 		= {166,1833,"name_masha","name_masha_small"},
	meceniy 	= {913,846,"name_mechenii","name_mechenii_small"},
	mercaushy 	= {249,1175,"name_mertsayuschii","name_mertsayuschii_small"},
	molniy 		= {249,1034,"name_molniya","name_molniya_small"},
	monolith 	= {913, 893,"name_monolit","name_monolit_small"},
	morozko 	= {249,1410,"name_morozko","name_morozko_small"},
	muha 		= {83,1739,"name_muha","name_muha_small"},
	nano 		= {913,752}, -- nano_suit
	nazar 		= {249,987,"name_nazar","name_nazar_small"},
	net		 	= {747,94,"name_lokalnaya_set","name_lokalnaya_set_small"},
	noi 		= {498,1598,"name_noi","name_noi_small"},
	norman 		= {166,1457,"name_norman","name_norman_small"},
    nodata   	= {249,940,"name_istochnik_neizvesten","name_istochnik_neizvesten_small"},
	o_soznanie 	= {415,893,"name_o_soznanie","name_o_soznanie_small"},
	obmorok 	= {166,1504,"name_obmorok","name_obmorok_small"},
	op2	 		= {332,987,"name_komanda_sozdatelei_op_2","name_komanda_sozdatelei_op_2_small"},
	osvedomitel	= {498,987,"name_osvedomitel","name_osvedomitel_small"},
	otshelnik 	= {0,1833,"name_otshelnik","name_otshelnik_small"},
	ozersky		= {913,611,"name_professor_ozerskii","name_professor_ozerskii_small"},
	pantera 	= {83,1128,"name_pantera","name_pantera_small"},
	parfumer 	= {166,1410,"name_parfyumer","name_parfyumer_small"},
	peregar 	= {498,1551,"name_peregar","name_peregar_small"},
	petrenko 	= {332,376,"name_petrenko","name_petrenko_small"},
	petrov 		= {166,1457,"name_stalker_petrov","name_stalker_petrov_small"},
	petrovich 	= {249,1269,"name_petrovich","name_petrovich_small"},
	petruha 	= {332,799,"name_petruha","name_petruha_small"},
	piligrim 	= {0,1974,"name_piligrim","name_piligrim_small"},
	plichko		= {332,282,"name_plichko","name_plichko_small"},
	potap		= {249,1880,"name_potap","name_potap_small"},
	povar		= {249,1739,"name_povar","name_povar_small"},
	prapor		= {332,1880,"name_prapor","name_prapor_small"},
	prigorshnya = {166,1786,"name_prigorshnya","name_prigorshnya_small"},
	prizrak  	= {415,705,"name_prizrak","name_prizrak_small"},
	proper70 	= {0,1457,"name_proper_semidesyatii","name_proper_semidesyatii_small"},
	provodnik	= {332,1504,"name_provodnik","name_provodnik_small"},
	pula		= {332,1457,"name_pulya","name_pulya_small"},
	questman_death = {664,470}, -- смерть квестовика/гг
	radist 		= {166,1222,"name_radist","name_radist_small"},
	resident_evil = {0,1128,"name_obitel_zla","name_obitel_zla_small"},
	remind		= {913,423,"name_napominaniya","name_napominaniya_small"},
	romale		= {166,1974,"name_roma_romale","name_roma_romale_small"},
	saharov  	= {332,470,"name_saharov","name_saharov_small"},
	sak			= {415,987,"name_syak","name_syak_small"},
	sapsan 		= {83,1692,"name_sapsan","name_sapsan_small"},
	sedoy 		= {83,1363,"name_sedoi","name_sedoi_small"},
	semenov		= {83,1363,"name_semyonov","name_semyonov_small"},
	semeckiy	= {332,1974,"name_yurii_semetskii","name_yurii_semetskii_small"},
	shadow_monolit = {83,1880,"ТЕНЬ МОНОЛИТА:","Тень Монолита"},
	shadowman	= {249,1974,"name_shedoumen","name_shedoumen_small"},
	shahter 	= {166,1034,"name_shahtyor","name_shahtyor_small"},
	shnira		= {332,1692,"name_shnira","name_shnira_small"},
	shurup		= {332,1222,"name_shurup","name_shurup_small"},
	shax		= {249,1457,"name_shahmatist","name_shahmatist_small"}, 
	sherstuk	= {249,1551,"name_sherstyuk","name_sherstyuk_small"},
	shi3 		= {249,1363,"name_shi3","name_shi3_small"},
	sidor 		= {249,611,"name_sidorovich","name_sidorovich_small"},
	skraga		= {249,1598,"name_skryaga","name_skryaga_small"},
	sledopyt	= {332,1034,"name_sledopit","name_sledopit_small"}, 
	snegir 		= {0,1645,"name_slavik_snegir","name_slavik_snegir_small"},
	solvador 	= {83,1645,"name_solvador","name_solvador_small"},
	stalker  	= {0,658},
	starik		= {415,1927,"name_starik","name_starik_small"},
	starogil	= {664,658,"name_starii_zhil","name_starii_zhil_small"},
	strelok		= {913,705,"name_strelok","name_strelok_small"},
	suslov 		= {0,1363,"name_suslov","name_suslov_small"},
	sviblov 	= {166,1645,"name_sviblov","name_sviblov_small"},
	svyaz	 	= {747,94,"name_operator_svyazi","name_operator_svyazi_small"},
    tolik		= {249,1504,"name_tolik","name_tolik_small"},
	trade	 	= {0,0}, -- деньги
	trader   	= {332,893}, -- сидорович
    trofim		= {332,0,"name_trofim","name_trofim_small"},
	uniq  	 	= {498,47},
	unknown 	= {913,799,"name_neizvestnii_stalker","name_neizvestnii_stalker_small"},
	varg 		= {498,1786,"name_varg","name_varg_small"},
	vesker 		= {0,1786,"name_vesker","name_vesker_small"},
	viking 		= {415,94,"name_viking","name_viking_small"},
	vitamin 	= {83,1786,"name_vitamin","name_vitamin_small"},
	vol 		= {913,517}, -- волазар первый
	vol_new 	= {913,564,"name_volazar","name_volazar_small"},
	volkov	 	= {249,1645,"name_professor_volkov","name_professor_volkov_small"},
	voronin 	= {332,423,"name_voronin","name_voronin_small"},
	voron 		= {498,1128,"name_voron","name_voron_small"},
	vasiliy		= {415,1034,"name_vasilii","name_vasilii_small"},
	vasya9		= {498,376,"name_vasya_devyatii","name_vasya_devyatii_small"},
    weaprep 	= {0,517}, -- апгрейд оружия
	wolf	 	= {332,940,"name_volk","name_volk_small"},
	wolffrend 	= {0,1081,"name_vozhak","name_vozhak_small"},
	yakut		= {332,1927,"name_yakut","name_yakut_small"},
	yurik		= {249,1786,"name_yurik","name_yurik_small"},
	zahar	 	= {415,1880,"name_zahar","name_zahar_small"},
	zashita 	= {664,141,"name_sistema_zaschiti","name_sistema_zaschiti_small"},
	zemlyak 	= {83,1457,"name_zemlyak","name_zemlyak_small"},
	ziklop 		= {83,987,"name_tsiklop","name_tsiklop_small"},
	zlobny 		= {166,1363,"name_zlobnii","name_zlobnii_small"}
}

function prepare_tips()
	for k,data in pairs(tips_icons) do
		if data[3] then
			data[3]=translate(data[3])
		end
		if data[4] then
			data[4]=translate(data[4])
		end
	end
end

function get_sender_icon_full(sender) -- для заголовка вернуть и [3] и [4]
	if sender == nil then
		return tips_icons["default"]
	end
	local icon=tips_icons[sender]
	if icon==nil then
		return tips_icons["default"]
	end
	return icon
end

-- Получение иконки отправителя
function get_sender_icon(text, sender)
	if sender == nil or not tips_icons[sender] then
		-- пробуем найти иконку по заголовку СМС
		sender = nil
		
		for k,v in pairs(tips_icons) do
			if (v[3] and string.find(text, v[3], 1, true)) or (v[4] and string.find(text, v[4], 1, true)) then
				sender = k
				break
			end
		end
		
		if sender == nil then
			-- не нашли
			sender = "default"
		end
	end
	
	return tips_icons[sender][1], tips_icons[sender][2]
end

function send_tip(news_id, timeout, sender, showtime, sender_id, ozvuchka)
	if news_id == nil then return false end

	--' Если задан timeout, то вызываем отложенно для синхронизации озвучки
	if timeout then
		--timer("sms", timeout, "sms(\""..string.gsub(news_id,"\\","\\\\").."\",nil,"..(sender and "\""..sender.."\"" or "nil")..","..(showtime or "nil")..","..(sender_id or "nil")..","..(ozvuchka and "[["..ozvuchka.."]]" or "nil")..")")
		timer("sms", timeout, "sms(\""..news_id.."\",nil,"..(sender and "\""..sender.."\"" or "nil")..","..(showtime or "nil")..","..(sender_id or "nil")..","..(ozvuchka and "[["..ozvuchka.."]]" or "nil")..")")
		return true
	else
		timeout = 0
	end
	
	if showtime == nil then showtime = 5000 end

	if ozvuchka then
		--' играем озвучку
		xr_sound.stop_prev_sms_sound()

		if getFS():exist("$game_sounds$", ozvuchka..".ogg") then
			local ozvuchka_snd = voice(ozvuchka)
			ozvuchka_snd:play(db.actor, timeout, sound_object.s2d)
			
			--' Необходимо поставить время показа по длине сцены
			showtime = ozvuchka_snd:length()
			if showtime < 5000 then showtime = 5000 end
		else
			log("Send_tip: sound [%s] does not exist", ozvuchka)
		end
	else
		--' Играем дефолтный звук
		pda_tips:play_no_feedback(db.actor, sound_object.s2d, timeout, vector(), 1.0)
		if news[news_id] ~= nil then
			--' Играем звук забитый
			news[news_id]:play(db.actor, timeout+1, sound_object.s2d)

			--' Необходимо поставить время показа по длине сцены
			showtime = news[news_id]:length()
		end
	end
	
	-- Получаем текст
	news_id = translate(news_id)
	
	-- Определяем, ГГ как отправитель по игре уже Cтрелок, или еще Меченый
	if has_info("esc_find_doctor_done") then
		news_id = string.gsub(news_id, "name_mechenii"..":", "name_strelok"..":", 1)
		news_id = string.gsub(news_id, "name_mechenii_small"..":", "name_strelok_small"..":", 1)
	else
		news_id = string.gsub(news_id, "name_strelok"..":", "name_mechenii"..":", 1)
		news_id = string.gsub(news_id, "name_strelok_small"..":", "name_mechenii_small"..":", 1)
	end

	-- Меняем цвет отправителя
	news_id = string.gsub(news_id, "sender", "sender_red", 1)

	local news_text = "%c[sender]"..translate("st_tip").."\\n".."%c[default]"..news_id
	local x,y = get_sender_icon(news_text, sender)
	db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(x,y,83,47), timeout*1000, showtime)
	return true
end

function send_tip_nosound(actor, news_id, timeout, sender)
	if news_id == nil then return end

	timeout = 0

	--' Играем дефолтный звук
	pda_tips:play(db.actor, timeout, sound_object.s2d)
	local news_sound = news[news_id]

	return news_sound
end

local action_descr_by_type = {
	new = "general_new_task",
	update = "general_update_task",
	complete = "general_complete_task",
	fail = "general_fail_task"
}

local cycletask = {
	[0] = "eliminate_lager",
	[1] = "defend_lager",
	[2] = "kill_stalker",
	[3] = "monster_part",
	[4] = "artefact",
	[5] = "find_item",
	[6] = "unique_item",
}

function send_task(actor, type, task, objective)
	-- u3_utils.printf("send_task function started with type: "..type..".")
	if db.actor == nil then return false end
	
	local task_title = task:get_title()
	local task_time = string.find(task_title, "\\n", 1, true)
	if task_time then
		task_title = string.sub(task_title, 1, task_time-1)
	end
	local skip_autosave = false -- пропуск автосейва на циклических заданиях
	local news_text, task_texture, task_rect
	local objective_index = objective:get_idx() + 1
	
	--' Играем дефолтный звук
	pda_task:play(db.actor, 0, sound_object.s2d)

	-- цвет сообщения
	local text_color = "%c[sender]"
	if type == "fail" then
		text_color = "%c[255,255,0,0]"
	end
	
	-- Циклическое ли задание?
	local task_id = task:get_id()
	local cycletask_type = (string.find(task_id, "^tm_") and tonumber(string.sub(task_id, 4, 4))) or nil
	
	if cycletask[cycletask_type] then
		skip_autosave = true
		
		--' Циклическое задание - берем координаты из текстуры таска
		task_texture, task_rect = get_texture_info("ui_iconsTotal_"..cycletask[cycletask_type], "ui_iconsTotal_stalker10")
		
		news_text = text_color..translate(action_descr_by_type[type]).."\\n"..
		"%c[255,0,255,255]"..translate(task_title)..": %c[255,127,255,255]"..translate(task:get_objective(1):get_description())
	else
		--' Берем координаты единой текстуры
		task_texture, task_rect = get_texture_info("ui_iconsTotal_stalker10", "ui_iconsTotal_stalker10")
		
		news_text = text_color..translate(action_descr_by_type[type]).."\\n"..
		"%c[255,0,255,255]"..translate(task_title)
		
		if type ~= "complete" and type ~= "fail" then
			-- workaround for incomplete objective list
			if task:get_objectives_cnt() == objective_index then
				objective_index = objective_index - 1
			end
			
			if type == "new" then
				local obj_desc = task:get_objective(objective_index):get_description()
				if obj_desc ~= nil then
					news_text = news_text..": %c[255,127,255,255]"..translate(obj_desc)
				end
			elseif type == "update" then
				local obj_desc1 = task:get_objective(objective_index-1):get_description()
				local obj_desc2 = task:get_objective(objective_index):get_description()
				if obj_desc1 ~= nil then
					news_text = news_text.."\\n".."%c[255,127,255,255]"..translate("news_finished")..": "..translate(obj_desc1)
				end
				if obj_desc2 ~= nil then
					news_text = news_text.."\\n".."%c[255,127,255,255]"..translate("news_next")..": "..translate(obj_desc2)
				end
			end
		end
		
		-- считаем задания
		if type == "update" then
			xr_statistic.add_subtask()
		elseif type == "complete" then
			xr_statistic.add_subtask()
			xr_statistic.add_task()
		end
	end

	if db.actor:is_talking() then	
		db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
	end	
	--выдаем в любом случае чтобы попало в дневник
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 30000)
	
	if type == "new" or
		type == "update"
	then
		--' Выдать новое подзадание
		if task:get_objectives_cnt() == objective_index then
			return
		end
		news_text = translate(task:get_objective(objective_index):get_description())
	else
		news_text = text_color..translate(action_descr_by_type[type])..
		"\\n".."%c[255,0,255,255]"..translate(task_title)
	end

	-- автосохранение только при получении и сдаче задания. циклические задания игнорируются.
	if not skip_autosave then
		local news_text_save = translate(task_title)
		if type == "complete" then
			news_text_save = news_text_save.." - "..translate("news_finished_small")
		end
		
		-- удаляем предыдущий таймер на сохранение при сдаче/получении нескольких квестов в одном диалоге 
		-- сохраняем только самый последний автосейв по завершении диалога
		if type == "new" or type == "complete" then
			Timer:restart("autosave", 3, news_text_save)
		end
	end

	hud:AddCustomStatic("main_task", true)
	hud:GetCustomStatic("main_task"):wnd():SetTextST(news_text)
	hud:GetCustomStatic("main_task").m_endTime = time_global()/1000 + 7
end

function send_encyclopedy(_type, group, name)
	local article_types = {
		[0] = "news_article",-- Справка
		[1] = "news_journal",-- Журнал
		[2] = "news_task",		-- Задания
		[3] = "news_info"		-- Вырезанный раздел, но пусть будет
	}
	pda_news:play(db.actor, 0, sound_object.s2d)
	if _type == 2 then group = string.match(group, "^[^/]+") end
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_locations", "ui_iconsTotal_locations")
	local news_text = "%c[sender]"..translate(article_types[_type]).."\\n"..
		"%c[255,255,255,0]"..translate(group)
	if _type~=2 then 
		news_text = news_text..":%c[255,255,255,127] "..translate(name)
	end
	if db.actor:is_talking() then	
		db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
	end	
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 7000)
end

function send_treasure(name, level_name)
	pda_news:play(db.actor, 0, sound_object.s2d)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_abstract5")
	local news_text = "%c[sender]"..translate("st_found_new_treasure")..
		"\\n".."%c[120,255,120,160]"..translate(level_name)..
		": %c[170,200,200,200]"..translate(name)	
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 20000)
end

function relocate_item(type, item, count)
	if db.actor == nil then return false end
	if not count then count = 1 end
	--' Играем дефолтный звук
	if type == "in" then
		local news_text = "%c[255,105,239,146]"..translate("general_in_item").."\\n".."%c[default]"..iif(count>1,count.."x ","")..get_inv_name(item)		
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, "ui\\ui_icon_equipment", get_item_icon(item), "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, "ui\\ui_icon_equipment", get_item_icon(item), 0, 5000)
		end		
	elseif type == "out" then
		local news_text = "%c[255,255,085,085]"..translate("general_out_item").."\\n".."%c[default]"..iif(count>1,count.."x ","")..get_inv_name(item)	
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, "ui\\ui_icon_equipment", get_item_icon(item), "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, "ui\\ui_icon_equipment", get_item_icon(item), 0, 5000)
		end		
	end
end

function relocate_money(type, amount)
	if db.actor == nil then return false end


	--' Играем дефолтный звук
	if type == "in" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_found_money")
		local news_text = "%c[255,105,239,146]"..translate("general_in_money").."\\n".."%c[default]"..translate(tostring(amount))
		
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 5000)
		end		
	elseif type == "out" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
		local news_text = "%c[255,255,085,085]"..translate("general_out_money").."\\n".."%c[default]"..translate(tostring(amount))
		
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 5000)
		end		
	end
end

