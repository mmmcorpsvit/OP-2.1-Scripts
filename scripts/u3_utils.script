-- автосохранения 

function savegame(save_name, save_anyway)
	if not game_is_running() then return end
	if not save_anyway and not ui_mm_opt_creator.get_bool_user_param("autosave_enable") then return end
	if has_info("no_autosave") then
        cant_save(translate("ui_autosave_cant"))
		return
	end
	if Timer:has("af_transform_universal") then
        cant_save(translate("ui_autosave_cook"))
        return
    end
	if Timer:has("no_save") then
        --cant_save("Автосохранение не создано - прошло мало времени с момента последней загрузки")
        return
    end

	save_name = save_name:clear()
	if string.len(save_name)>60 then
		save_name = string.sub(save_name,1,58).."..."
	end
	console:execute("save "..save_name)
end

function savegame_date(save_name)
	savegame(translate("ui_autosave_day").." "..game.days()+1 ..". "..save_name..". "..translate(level.name()))
end
function savegame_lc(name, to_level)
	savegame(translate("ui_autosave_day").." "..game.days()+1 ..". "..name.." "..translate(level.name()).." - "..translate(to_level))
end
function savegame_on_level()
	savegame(string.format(translate("ui_autosave_day").." %d. %02d.%02d. %s", game.days()+1, level.get_time_hours(), level.get_time_minutes(), translate(level.name())), true)
end

function can_save() -- не сохраняем во время открытых окон, когда нельзя сделать квиксейв
	return level.main_input_receiver() == nil
end

function cant_save(reason) -- сообщение, что нельзя сохраняться во время определенных действий
	local _hud = hud:AddCustomStatic("cant_walk", true)
	_hud:wnd():SetText(reason)
end

-- Создание именного автосейва при переходе на другой уровень
function copy_autosave(old_lvl, new_lvl)
	local save_name = old_user_name().."_autosave.sav"
	local fs = getFS()
	if fs:exist("$game_saves$", save_name) then
		local new_svname = translate("ui_autosave_day").." "..game.days()+1 ..". "..translate("ui_autosave").." "..translate(old_lvl).." - "..translate(new_lvl)
		new_svname = new_svname:clear()
		
		local f1 = fs:update_path("$game_saves$", save_name)
		local f2 = fs:update_path("$game_saves$", new_svname..".sav")
		fs:file_copy(f1, f2)
	end
end

