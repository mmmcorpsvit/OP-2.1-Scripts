class "opt_huds" (CUIScriptWnd)

function opt_huds:__init(parent_wnd) super()
	self.parent_wnd=parent_wnd
end

function opt_huds:__finalize()

end

function opt_huds:InitControls()
	local multihuds=get_multihuds()
	self:Init(55,74, 738, 416)
	self:SetAutoDelete(true)
	
	self.xml = CScriptXmlInit()
	local xml=self.xml
	xml:ParseFile("ui_mm_huds.xml")
	
	xml:InitFrame("frame", self)
	xml:InitStatic("cap_list_huds",self)

	local background_list=xml:InitFrame("background_list",self)
	self.list_huds=xml:InitList("background_list:list",background_list)
	self.list_huds:ShowSelectedItem(true)
	self:Register(self.list_huds,"list_huds")
	self:AddCallback("list_huds",ui_events.LIST_ITEM_CLICKED,self.huds_select_item,self)
	local multihuds=get_multihuds()
	local curr_profile_name=ui_mm_opt_creator.getter_console_param("g_current_hud","default")
	self.start_profile_name=curr_profile_name
	local curr_profile_index=-1
	local index=0
	for _,profile in pairs(multihuds:profiles()) do
		self.list_huds:AddItem(hud_item(self.list_huds,profile,index))
		if curr_profile_name==profile:get_name() then
			curr_profile_index=index
		end
		index=index+1
	end
	self.list_huds:SetSelectedItem(curr_profile_index)
	
	self.art_panel_state=xml:InitCheck("check_art_panel_visible",self)
	
	self.background_description=xml:InitFrame("background_description",self)
	self.full_description=xml:InitStatic("background_description:static",self.background_description)
	self.full_description:SetText(multihuds:current():get_full_description())
	
	self.background_preview=xml:InitFrame("background_preview",self)
	self.preview=xml:InitStatic("background_preview:static",self.background_preview)
	self.preview:InitTexture(multihuds:current():get_preview_texture())
	
	self.btn_hide_huds = xml:Init3tButton		("btn_hide_huds",	self)	
	self:Register(self.btn_hide_huds, "btn_hide_huds")		
	self:AddCallback("btn_hide_huds",	ui_events.BUTTON_CLICKED,	
		function() 
			self:Show(false)
		end
	,self)
end

function opt_huds:get_selected_profile_from_list()
	local selectedIndex=self.list_huds:GetSelectedItem()
	local selectedItem=self.list_huds:GetItem(selectedIndex)
	if selectedItem then
		return selectedItem.profile
	end
	return nil
end

function opt_huds:huds_select_item()
	self.full_description:SetText("")
	local profile=self:get_selected_profile_from_list()
	if profile then
		ui_mm_opt_creator.setter_console_param("g_current_hud",profile:get_name())
		self.full_description:SetText(profile:get_full_description())
		self.preview:InitTexture(profile:get_preview_texture())
	end
end

class "hud_item" (CUIListItemEx) 
function hud_item:__init(paintControl,profile,index)  super()
	self.mainRect={x=0,y=0,w=paintControl:GetWidth(),h=19}
	self.profile=profile
	self.index=index
	self:SetWndRect(self.mainRect.x,self.mainRect.y,self.mainRect.w,self.mainRect.h)
	self.column1= CUIStatic()
	self.column1:SetAutoDelete(true)
	self.column1:SetWndRect(self.mainRect.x,self.mainRect.y,self.mainRect.w,self.mainRect.h)
	self.column1:SetFont(GetFontLetterica18Russian())
	self.column1:SetTextAlign(CGameFont.alLeft)
	self.column1:SetText(self.profile:get_short_description())
	self:AttachChild(self.column1)
end
